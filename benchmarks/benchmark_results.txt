MongoDB (results in seconds)

Range query result:
[0.2944681644439697,
 0.28916096687316895,
 0.28372716903686523,
 0.2791900634765625,
 0.2728259563446045,
 0.26642394065856934,
 0.2685720920562744,
 0.2707080841064453,
 0.2879960536956787,
 0.2799499034881592]

MapReduce query result:
[18.051552057266235,
 18.613569021224976,
 18.319264888763428,
 17.81685209274292,
 17.945057153701782,
 18.78616499900818,
 18.92860722541809,
 19.2401340007782,
 19.187970876693726,
 17.783262968063354]

200 threads in workload simulation, save results off
Workload simulation result
[6.945255994796753,
 7.298089981079102,
 7.059103012084961,
 7.227065801620483,
 7.4749579429626465,
 7.59293007850647,
 8.128200054168701,
 8.516998052597046,
 7.649991035461426,
 7.728899002075195]

 CouchDB (results in seconds)

Range query result:
[0.031234025955200195,
 0.014580965042114258,
 0.010600090026855469,
 0.007702827453613281,
 0.010009050369262695,
 0.007850170135498047,
 0.008256912231445312,
 0.008105039596557617,
 0.007946968078613281,
 0.008790969848632812]

MapReduce query result:
[4.510771989822388,
 3.27237606048584,
 3.4142661094665527,
 3.416632890701294,
 3.4731881618499756,
 6.38683295249939,
 6.0542449951171875,
 3.8828580379486084,
 9.240603923797607,
 4.087347030639648]

200 threads in workload simulation, save results off
[2.2395811080932617,
 1.8961679935455322,
 2.164030075073242,
 1.8612802028656006,
 1.9332408905029297,
 1.900036096572876,
 2.1305110454559326,
 2.496000051498413,
 2.28153395652771,
 2.447028160095215]

-------------------------------------------------------------------------------------------------------

Results with input part files 00099, 00098, 00097, 00096

MongoDB, no indexes (results in seconds)

Range query result:
[1.5326299667358398,
 1.4898738861083984,
 1.4623918533325195,
 1.4816408157348633,
 1.4833369255065918,
 1.5891499519348145,
 1.5238518714904785,
 1.4415640830993652,
 1.4449210166931152,
 1.5072910785675049]

 MapReduce query result:
[70.54809594154358,
 63.925912857055664,
 66.14579510688782,
 66.34413814544678,
 64.69570183753967,
 64.34092402458191,
 68.52842998504639,
 67.26464796066284,
 64.55178689956665,
 63.42024302482605]

Aggregation pipeline query result:
[3.791059970855713,
 3.946621894836426,
 3.8957908153533936,
 3.941413164138794,
 3.956423044204712,
 4.0149431228637695,
 3.9785919189453125,
 3.8826398849487305,
 3.924139976501465,
 3.9396979808807373]

 Workload simulation result
[9.978820085525513,
 11.219135999679565,
 12.448333978652954,
 13.257589101791382,
 12.70954704284668,
 13.169378995895386,
 12.752178192138672,
 12.551738977432251,
 12.85796594619751,
 13.709453105926514]


MongoDB

With index on rankings.pageRank, ascending
Range query only uses the rankings collection

 Range query result:
[0.0069751739501953125,
 0.0005190372467041016,
 0.0004899501800537109,
 0.00047087669372558594,
 0.0005898475646972656,
 0.0011899471282958984,
 0.0005280971527099609,
 0.0005171298980712891,
 0.00043487548828125,
 0.0004668235778808594]

MapReduce query with index db.uservisits.createIndex( { "visitDate": 1 } ) where visitDate is a string
No improvement

MapReduce query result:
[70.99035501480103,
 68.80257391929626,
 72.74208807945251,
 69.81059193611145,
 70.96156191825867,
 69.0579481124878,
 69.42003202438354,
 66.90236210823059,
 67.49684190750122,
 68.24389886856079]

MapReduce query with index db.uservisits.createIndex( { "visitDate": "text" } )
No improvement

Running MapReduce query...
MapReduce query result:
[76.21945405006409,
 66.9559121131897,
 74.90916609764099,
 70.35450291633606,
 71.1877760887146,
 71.1880431175232,
 72.83435606956482,
 71.03679895401001,
 71.5815601348877,
 69.21008086204529]

MapReduce query with index db.uservisits.createIndex( { "visitDate": 1 } ) where visitDate is an ISODate
No improvement

 MapReduce query result:
[73.89242601394653,
 75.04764413833618,
 72.95926785469055,
 68.43926119804382,
 71.70572090148926,
 70.90666103363037,
 70.07892203330994,
 71.0907289981842,
 70.06156492233276,
 71.9105589389801]

Running it again:

Running MapReduce query...
MapReduce query result:
[69.20632815361023,
 69.5830888748169,
 66.55808591842651,
 64.9306218624115,
 66.87332892417908,
 65.97534704208374,
 71.45677304267883,
 70.00313091278076,
 67.77361392974854,
 70.5177800655365]

 MapReduce query with index db.uservisits.createIndex( { "visitDate": 1 } ) where visitDate is an ISODate and input documents for the mapper are sorted by visitDate ascending
 No improvement, worse actually

MapReduce query result:
[81.90266013145447,
 82.44332385063171,
 82.03059601783752,
 81.15557408332825,
 83.75921416282654,
 78.38861083984375,
 77.76844882965088,
 75.51889896392822,
 80.69941091537476,
 79.93924903869629]

Running it again:

Running MapReduce query...
MapReduce query result:
[88.38885283470154,
 86.50386714935303,
 85.46894192695618,
 84.78550982475281,
 86.69200491905212,
 84.51282811164856,
 81.62038707733154,
 79.00121402740479,
 78.72037410736084,
 77.14250302314758]

Workload simulation with index on rankings.pageRank, ascending:

Running workload simulation...
Workload simulation result
[0.18584895133972168,
 0.12671399116516113,
 0.15474200248718262,
 0.15935397148132324,
 0.17854905128479004,
 0.19500112533569336,
 0.21245503425598145,
 0.22412395477294922,
 0.2534151077270508,
 0.2961139678955078] 

Aggregation query with index db.uservisits.createIndex( { "visitDate": 1 } ) where visitDate is an ISODate

Running aggregation pipeline query...
Aggregation pipeline query result:
[3.7452030181884766,
 3.6838958263397217,
 3.7853500843048096,
 3.6357228755950928,
 3.9267261028289795,
 3.913499116897583,
 3.8432929515838623,
 3.714137077331543,
 3.7518560886383057,
 3.752531051635742]

Running it again:

Aggregation pipeline query result:
[3.970118999481201,
 3.951598882675171,
 4.096091985702515,
 3.9915308952331543,
 4.133204936981201,
 3.9935288429260254,
 3.8808369636535645,
 4.046357154846191,
 3.87021803855896,
 3.9836740493774414]

Aggregation query with index db.uservisits.createIndex( { "visitDate": 1 } ) where visitDate is an ISODate and a sort operation on visitDate in the beginning of the pipeline

 Running aggregation pipeline query...
Aggregation pipeline query result:
[49.5709490776062,
 50.58434700965881,
 49.50186085700989,
 50.891976833343506,
 51.471855878829956,
 52.00241804122925,
 53.01556992530823,
 52.68778085708618,
 51.12340688705444,
 51.047611951828]


























